/*
 * --- General Rules ---
 * Use underscore_names instead of camelCase
 * Table names should be plural
 * Spell out id fields (item_id instead of id)
 * Don't use ambiguous column names
 * Name foreign key columns the same as the columns they refer to
 * Use caps for all SQL queries
 */

CREATE SCHEMA IF NOT EXISTS tools_rent_db;

SET NAMES 'UTF8';
SET TIMEZONE = 'Europe/Kiev';
SET TIMEZONE = '+2:00';

--USE tools_rent_db;

DROP TABLE IF EXISTS Users CASCADE;

CREATE TABLE Users
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name  VARCHAR(50) NOT NULL,
    email      VARCHAR(100) NOT NULL UNIQUE,
    password   VARCHAR(255) DEFAULT NULL,
    address    VARCHAR(255) DEFAULT NULL,
    phone      VARCHAR(30) DEFAULT NULL,
    title      VARCHAR(50) DEFAULT NULL,
    bio        VARCHAR(255) DEFAULT NULL,
    enabled    BOOLEAN DEFAULT FALSE,
    non_locked BOOLEAN DEFAULT TRUE,
    using_mfa  BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP,
    image_url  VARCHAR(255) DEFAULT 'https://cdn-icons-png.flaticon.com/512/149/149071.png'
);

DROP TABLE IF EXISTS Roles CASCADE;

CREATE TABLE Roles
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name  VARCHAR(50) NOT NULL UNIQUE,
    permission VARCHAR(255) NOT NULL -- user:read,user:delete,customer:read
);

DROP TABLE IF EXISTS UserRoles CASCADE;

CREATE TABLE UserRoles
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT  NOT NULL UNIQUE REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    role_id BIGINT  NOT NULL REFERENCES Roles (id) ON DELETE RESTRICT ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Events CASCADE;

CREATE TABLE Events
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type        VARCHAR(50) NOT NULL UNIQUE CHECK(type IN ('LOGIN_ATTEMPT', 'LOGIN_ATTEMPT_FAILURE', 'LOGIN_ATTEMPT_SUCCESS', 'PROFILE_UPDATE', 'PROFILE_PICTURE_UPDATE', 'ROLE_UPDATE', 'ACCOUNT_SETTINGS_UPDATE', 'PASSWORD_UPDATE', 'MFA_UPDATE')),
    description VARCHAR(255) NOT NULL
);

DROP TABLE IF EXISTS UserEvents CASCADE;

CREATE TABLE UserEvents
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    BIGINT NOT NULL REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    event_id   BIGINT NOT NULL REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    device     VARCHAR(100) DEFAULT NULL,
    ip_address VARCHAR(100) DEFAULT NULL,
    created_at TIMESTAMP
);

DROP TABLE IF EXISTS AccountVerifications CASCADE;

CREATE TABLE AccountVerifications
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL UNIQUE REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    url     VARCHAR(255) NOT NULL UNIQUE
    -- date     DATE NOT NULL,
);

DROP TABLE IF EXISTS ResetPasswordVerifications CASCADE;

CREATE TABLE ResetPasswordVerifications
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT NOT NULL UNIQUE REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    url             VARCHAR(255) NOT NULL UNIQUE,
    expiration_date DATE NOT NULL
);

DROP TABLE IF EXISTS TwoFactorVerifications CASCADE;

CREATE TABLE TwoFactorVerifications
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT NOT NULL UNIQUE REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    code            VARCHAR(10) NOT NULL UNIQUE,
    expiration_date DATE NOT NULL
);

DROP TABLE IF EXISTS ToolModels CASCADE;

CREATE TABLE ToolModels
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    model_name   VARCHAR(50) NOT NULL,
    type         VARCHAR(30) DEFAULT NULL,
    image_url    VARCHAR(255) DEFAULT 'https://cdn-icons-png.flaticon.com/512/149/149071.png'
);

DROP TABLE IF EXISTS Tools CASCADE;

CREATE TABLE Tools
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    qr_code      VARCHAR(50) NOT NULL,
    model_id     BIGINT NOT NULL REFERENCES ToolModels (id) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS ToolsClients CASCADE;

CREATE TABLE ToolsClients
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tool_id      BIGINT NOT NULL,
    user_id      BIGINT NOT NULL,
    start_date   TIMESTAMP DEFAULT NULL,
    finish_date  TIMESTAMP DEFAULT NULL,
    invoice_id   BIGINT NOT NULL
);

DROP TABLE IF EXISTS ToolsManagers CASCADE;

CREATE TABLE ToolsManagers
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tool_id      BIGINT NOT NULL,
    user_id      BIGINT NOT NULL,
    start_date   TIMESTAMP DEFAULT NULL,
    finish_date  TIMESTAMP DEFAULT NULL
);

INSERT INTO Roles (role_name, permission)
VALUES  ('ROLE_USER', 'READ:USER,READ:CUSTOMER,READ:TOOLS'),
        ('ROLE_CUSTOMER', 'READ:USER,READ:CUSTOMER,READ:TOOLS,UPDATE:USER,UPDATE:CUSTOMER'),
        ('ROLE_MANAGER', 'READ:USER,READ:CUSTOMER,READ:TOOLS,UPDATE:USER,UPDATE:CUSTOMER,UPDATE:TOOLS'),
        ('ROLE_ADMIN', 'READ:USER,READ:CUSTOMER,READ:TOOLS,CREATE:USER,CREATE:CUSTOMER,CREATE:TOOLS,UPDATE:USER,UPDATE:CUSTOMER,UPDATE:TOOLS'),
        ('ROLE_SYSADMIN', 'READ:USER,READ:CUSTOMER,READ:TOOLS,CREATE:USER,CREATE:CUSTOMER,CREATE:TOOLS,UPDATE:USER,UPDATE:CUSTOMER,UPDATE:TOOLS,DELETE:USER,DELETE:CUSTOMER,DELETE:TOOLS');